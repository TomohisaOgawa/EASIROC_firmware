# EASIROC_firmware

…or create a new repository on the command line  

echo "# EASIROC_firmware" >> README.md  
git init  
git add README.md  
# (use "git add/rm <file>..." to update what will be committed)
git commit -m "first commit"  
git remote add origin https://github.com/TomohisaOgawa/EASIROC_firmware.git  
git push -u origin master  

…or push an existing repository from the command line  

git remote add origin https://github.com/TomohisaOgawa/EASIROC_firmware.git  
git push -u origin master  

if you remove .git  
git pull origin master



----- 2020/01/01 EASIROCfirmware_NC150923  
the first version by Naruhiro Chikuma  

----- EASIROCfirmware_NC150923_viva14.3_up200117   
injection pattern of test charge is added   

        when "001" =>  1   
           CAL1 <= 'Z'; -- High Impedance    
           CAL2 <= test_palse;   
        when "010" =>  2   
           CAL1 <= test_palse;   
           CAL2 <= test_palse;  
        when others => 0   
           CAL1 <= test_palse;   
           CAL2 <= 'Z'; -- High Impedance   

this is controlled from RegisterValue.yml  
# calibartion pulse combination   
TestChargeSetting: 2  


----- EASIROCfirmware_NC150923_viva14.3_up200222   
internal generation of stop and accept are added  
  
        if(TriggerMode = 2) then -- 2 => this works 02/22     
           Hold_tmp <= HOLD;    
           L1_tmp   <= L1_delayed; -- stop ~ delayed hold     
           L2_tmp   <= L2_delayed; -- accept ~ delayed hold   

        elsif(TriggerMode = 1) then -- 1        
            Hold_tmp <= HOLD;    
            L1_tmp   <= L1_TRIGGER; -- stop    
            L2_tmp   <= L2_TRIGGER; -- accpt   
        end if;
 
this is controlled from RegisterValue.yml
Trigger: # parameters below are read one by one   
         # 1: input hold, stop, & accept    
         # 2: input hold, stop & accept are internally generated    
         #     after fixed 200 & 1000 nsec from hold, confirmed with calib pulse @ 20/02/22    
        Mode: 1   

----- EASIROCfirmware_NC150923_viva14.3_up200304
see yaml/RegisterValue.yml

Trigger: # Explanation of parameters below    
         #    
         # 1: Based on TRIG, need to input HOLD, STOP, & ACCEPT individually. Standard operation.    
         #    
         # 2: Based on TRIG, need to input HOLD, but, STOP & ACCEPT are internally generated.     
         #     With fixed delay of 80 & 1000 nsec from HOLD,    
         #     operation was confirmed for test-charge with acquisitions of 2 KHz for 200fF & 100fF     
         #     @ 20/02/22.    
         #    
         # 3: Based on TRIG, HOLD, STOP, & ACCEPT are internally generated.    
         #     HOLD is generated with adjustbale delay, STOP, & ACCEPT are generated     
         #     with fixed delay of 80 & 1000 nsec from HOLD    
         #     @ 20/03/01.   
        Mode: 3   
        DelayTrigger: 38 # Adjustable delay with the internal 500MHz CLOCK (2nsec):     
                         # 33 is peak for test charge w/ 200fF. acquisitions of 2 KHz @ 20/03/01.    
                         # 33 is peak for test charge w/ 100fF. acquisitions of 2 KHz @ 20/03/01.    
                         # 38 is peak for test charge w/ 100fF. acquisitions of 2 KHz @ 20/03/01.    
                         # 42 is peak for test charge w/ 100fF. acquisitions of 0.4 KHz @ 20/03/01.   
        DelayHold:    -1 # 25MHz :unused @ 20/03/01   
        DelayL1Trig:  -1 # 6MHz  :unused @ 20/03/01   

